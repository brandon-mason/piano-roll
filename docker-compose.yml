version: '3.9'
services:
  react-piano:
    build:
      context: .
      dockerfile: react.dockerfile
    volumes:
      - reactVolume:/client
      - ./client:/build/client:ro
      - ./client/node_modules:/build/client/node_modules
    ports:
      - 3000:3000
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - node-piano
  node-piano:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
    volumes:
      - nodeVolume:/server
      - .:/build
      - ./server/node_modules:/build/server/node_modules
    environment:
      SERVER_PORT: ${SERVER_PORT}
    depends_on:
      - mongo-piano
  mongo-piano:
    image: mongo
    # restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
      MONGO_INITDB_ROOT_USERNAME: ${ME_CONFIG_MONGODB_ADMINUSERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${ME_CONFIG_MONGODB_ADMINPASSWORD}
    volumes:
      - mongo:/var/opt/mongo
  mongo-express-piano:
    image: mongo-express
    restart: always
    ports:
      - 3081:3081
    environment:
      - ME_CONFIG_MONGODB_SERVER=${ME_CONFIG_MONGODB_SERVER}
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${ME_CONFIG_MONGODB_ADMINUSERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${ME_CONFIG_MONGODB_ADMINPASSWORD}
    depends_on:
      - mongo-piano
    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js/mongo-init.js:ro
volumes:
  reactVolume:
  nodeVolume:
  mongo:
networks:
  mongo-compose-network:
    driver: bridge